{"version":3,"sources":["Navigation.jsx","FeedService.jsx","Feeds.jsx","EntryService.js","Entry.jsx","Entries.jsx","App.jsx","index.js"],"names":["Navigation","props","Fragment","Navbar","bg","variant","expand","Brand","href","Nav","className","Link","baseUrl","FeedService","axios","get","feed","put","id","join","Feeds","updateMessages","React","useState","feeds","setFeeds","errorMessage","useCallback","err","danger","console","log","successMessage","response","success","data","name","useEffect","then","catch","toggleTd","i","Form","Switch","key","onChange","event","updatedFeeds","display","target","checked","updateFeed","label","aria-label","Table","striped","responsive","size","map","attr","_","pick","tds","v","k","EntryService","entry","delete","getUniqueRgbHtmlColor","index","colorList","length","allRowClassNames","progressClassName","readClassName","Entry","isLast","asteriskStyle","color","feed_id","rowClassNames","setRowClassNames","prevState","without","goToUrl","window","open","link","markEntryRead","Row","Col","xs","as","Button","onClick","style","corationLine","rel","subject","Entries","entries","setEntries","Container","fluid","App","messages","setMessages","isEmpty","Alert","minHeight","dismissible","onClose","exact","path","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAkBeA,MAdf,SAAoBC,GAClB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,YAAYC,QAAQ,OAAOC,OAAO,MAC3C,kBAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,YAAnB,eACA,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIE,KAAL,CAAUH,KAAK,UAAf,SACA,kBAACC,EAAA,EAAIE,KAAL,CAAUH,KAAK,YAAf,e,yDCTJI,EAAU,SAYDC,E,mGARX,OAAOC,IAAMC,IAAIH,EAAU,W,0BAGlBI,GACT,OAAOF,IAAMG,IAAI,CAACL,EAASI,EAAKE,GAAK,SAASC,KAAK,KAAMH,O,sBCoE9CI,MAxEf,YAAoC,IAAnBC,EAAkB,EAAlBA,eAAkB,EACPC,IAAMC,SAAS,IADR,mBAC1BC,EAD0B,KACnBC,EADmB,KAG3BC,EAAeJ,IAAMK,aAAY,SAACC,GACtCP,EAAe,CAACQ,OAAQ,wBACxBC,QAAQC,IAAIH,KACX,CAACP,IAEEW,EAAiB,SAACC,GACtBZ,EAAe,CAACa,QAAS,qBAAuBD,EAASE,KAAKC,KAAO,QAavEd,IAAMe,WAAU,WACdxB,EAAYE,MAAMuB,MAAK,SAACL,GAAeR,EAASQ,EAASE,SAAUI,MAAMb,KACxE,CAACA,IAEJ,IAAMc,EAAW,SAACxB,EAAMyB,GACtB,OACI,kBAACC,EAAA,EAAKC,OAAN,CACEC,IAAK5B,EAAKE,GACV2B,SAAU,SAACC,IAlBA,SAACL,EAAGK,GACrB,IAAIC,EAAY,YAAOvB,GAEvBuB,EAAaN,GAAGO,QAAUF,EAAMG,OAAOC,QAEvCrC,EAAYI,IAAI8B,EAAaN,IAAIH,KAAKN,GAAgBO,MAAMb,GAE5DD,EAASsB,GAWoBI,CAAWV,EAAGK,IACrC5B,GAAI,iBAAmBF,EAAKE,GAC5BkC,MAAOpC,EAAKE,GACZmC,aAAY,UAAYrC,EAAKoB,KAC7Bc,QAASlC,EAAKgC,WAmBtB,OACE,kBAAC,IAAM9C,SAAP,KACE,kBAACoD,EAAA,EAAD,CAAOC,SAAO,EAACC,YAAU,EAACC,KAAK,MAC7B,+BACE,4BACE,kCACA,oCACA,mCACA,yCAGJ,+BAxBGjC,EAAMkC,KAAI,SAAC1C,EAAMyB,GACtB,IAAIkB,EAAOC,IAAEC,KAAK7C,EAAM,CAAC,KAAM,OAAQ,QACnC8C,EAAOF,IAAEF,IAAIC,GAAM,SAACI,EAAGC,GAAQ,OAAQ,wBAAIpB,IAAKoB,GAAID,MAExD,OACE,wBAAInB,IAAKH,GACNqB,EACD,4BAAKtB,EAASxB,EAAMyB,Y,gDCnDxB7B,EAAU,WAgBDqD,E,uGAZX,OAAOnD,IAAMC,IAAI,CAACH,EAAS,aAAaO,KAAK,Q,4BAI7C,OAAOL,IAAMC,IAAIH,EAAU,W,6BAGfsD,GACZ,OAAOpD,IAAMqD,OAAO,CAACvD,EAASsD,EAAMhD,GAAK,SAASC,KAAK,U,KCLrDiD,EAAwB,SAACC,GAC7B,IAAMC,EAAY,CAChB,CAAC,IAAI,IAAI,KACT,CAAC,EAAE,IAAI,KACP,CAAC,IAAI,GAAG,GACR,CAAC,GAAG,EAAE,IACN,CAAC,GAAG,GAAG,IACP,CAAC,EAAE,GAAG,IACN,CAAC,GAAG,IAAI,IACR,CAAC,IAAI,IAAI,KACT,CAAC,IAAI,IAAI,KACT,CAAC,IAAI,IAAI,KACT,CAAC,IAAI,IAAI,GACT,CAAC,IAAI,IAAI,GACT,CAAC,IAAI,EAAE,KACP,CAAC,EAAE,GAAG,KACN,CAAC,IAAI,IAAI,GACT,CAAC,IAAI,IAAI,KACT,CAAC,GAAG,IAAI,GACR,CAAC,IAAI,EAAE,IACP,CAAC,GAAG,IAAI,KACR,CAAC,EAAE,IAAI,KACP,CAAC,IAAI,IAAI,KACT,CAAC,IAAI,GAAG,KACR,CAAC,IAAI,EAAE,GACP,CAAC,IAAI,IAAI,KACT,CAAC,IAAI,IAAI,GACT,CAAC,IAAI,GAAG,IAGV,MAAO,OAASA,EAAUD,EAAQC,EAAUC,QAAQpD,OAAS,KAGzDqD,EAAoB,CAAC,aAAc,SACnCC,EAAoB,kCACpBC,EAAoB,CAAC,QAgDZC,MA9Cf,YAAmD,IAAlCtD,EAAiC,EAAjCA,eAAgB6C,EAAiB,EAAjBA,MAAOU,EAAU,EAAVA,OAChCC,EAAgB,CAAEC,MAAOV,EAAsBF,EAAMa,UADX,EAEJzD,IAAMC,SAASiD,GAFX,mBAEzCQ,EAFyC,KAE1BC,EAF0B,KAI1CvD,EAAeJ,IAAMK,aAAY,SAACC,GACtCqD,GAAiB,SAAAC,GAAe,OAAOtB,IAAEuB,QAAQD,EAAWT,MAC5DpD,EAAe,CAACQ,OAAQ,wBACxBC,QAAQC,IAAIH,KACX,CAACP,IAEEW,EAAiB,WACrBiD,GAAiB,SAAAC,GAAe,MAAM,CAAER,GAAR,mBAA0Bd,IAAEuB,QAAQD,EAAWT,SAG3EW,EAAU,WACdC,OAAOC,KAAKpB,EAAMqB,KAAM,UAExBC,KAGIA,EAAgB,WACpBP,GAAiB,SAAAC,GAAe,MAAM,CAAET,GAAR,mBAA8BS,OAC9DjB,EAAaE,OAAOD,GAAO5B,KAAKN,GAAgBO,MAAMb,IASxD,OANAJ,IAAMe,WAAU,YACV,IAASuC,GACXK,GAAiB,SAAAC,GAAe,MAAM,CAAE,iBAAR,mBAA4BA,SAE7D,CAACN,IAGF,kBAACa,EAAA,EAAD,CAAK7C,IAAKsB,EAAMhD,GAAIR,UAAWsE,GAC7B,kBAACU,EAAA,EAAD,CAAKrF,QAAS,QAASsF,GAAI,OAAQC,GAAIC,KACrC,kBAAC,IAAD,OAEF,kBAACH,EAAA,EAAD,CAAKC,GAAI,OAAQjF,UAAW,oBAAqBoF,QAASV,GACxD,kBAAC,IAAD,CAAYW,MAAOlB,KAErB,kBAACa,EAAA,EAAD,CAAKhF,UAAW,kCAAmCoF,QAASV,GAC1D,uBAAG1E,UAAW,uBAAwBqF,MAAO,CAACC,aAAc,OAAQlB,MAAO,SAAUmB,IAAI,sBAAsBhD,OAAO,SAASzC,KAAM0D,EAAMqB,MAAOrB,EAAMgC,YCxDjJC,MAzBf,YAAsC,IAAnB9E,EAAkB,EAAlBA,eAAkB,EACLC,IAAMC,SAAS,IADV,mBAC5B6E,EAD4B,KACnBC,EADmB,KAG7B3E,EAAeJ,IAAMK,aAAY,SAACC,GACtCP,EAAe,CAACQ,OAAQ,wBACxBC,QAAQC,IAAIH,KACX,CAACP,IAYJ,OAVAC,IAAMe,WAAU,WACd4B,EAAalD,MAAMuB,MAAK,SAACL,GAAeoE,EAAWpE,EAASE,SAAUI,MAAMb,KAC3E,CAACA,IASF,kBAAC4E,EAAA,EAAD,CAAWC,OAAK,GANTH,EAAQ1C,KAAI,SAACQ,EAAOzB,GACzB,OAAQ,kBAAC,EAAD,CAAOpB,eAAgBA,EAAgBuB,IAAKsB,EAAMhD,GAAI0D,OAASwB,EAAQ7B,OAAS,IAAO9B,EAAGyB,MAAOA,S,6BCgChGsC,MAxCf,WAAgB,IAAD,EACmBlF,IAAMC,SAAS,IADlC,mBACNkF,EADM,KACIC,EADJ,KAGPrF,EAAiB,SAACoF,GACtBC,EAAYD,IAed,OACE,kBAAC,IAAMvG,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MAdA0D,IAAE+C,QAAQF,GACJ,kBAACG,EAAA,EAAD,CAAOb,MAAO,CAACc,UAAW,SAAU,KAErCjD,IAAEF,IAAI+C,GAAU,SAAC1C,EAAGC,GACzB,OACE,kBAAC4C,EAAA,EAAD,CAAOhE,IAAKoB,EAAG3D,QAAS2D,EAAG8C,aAAW,EAACC,QAAU,WAAQL,MAAoB3C,MAW/E,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiD,OAAK,EAACC,KAAK,KAChB,kBAAC,IAAD,CAAUC,GAAG,cAEf,kBAAC,IAAD,CAAOD,KAAK,UACV,kBAAC,EAAD,CAAO5F,eAAgBA,KAEzB,kBAAC,IAAD,CAAO4F,KAAK,YACV,kBAAC,EAAD,CAAS5F,eAAgBA,SCrCrC8F,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.a5aa67c0.chunk.js","sourcesContent":["import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\n\nfunction Navigation(props) {\n  return (\n    <React.Fragment>\n      <Navbar bg=\"secondary\" variant=\"dark\" expand=\"lg\">\n        <Navbar.Brand href=\"/entries\">Mike Reader</Navbar.Brand>\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"/feeds\">Feeds</Nav.Link>\n          <Nav.Link href=\"/entries\">Entries</Nav.Link>\n        </Nav>\n      </Navbar>\n    </React.Fragment>\n  );\n}\n\nexport default Navigation;\n","import axios from 'axios';\n\nconst baseUrl = '/feeds';\n\nclass FeedService {\n  static get() {\n    return axios.get(baseUrl + '.json');\n  }\n\n  static put(feed) {\n    return axios.put([baseUrl, feed.id + '.json'].join('/'), feed);\n  }\n};\n\nexport default FeedService;\n","import React from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Form from 'react-bootstrap/Form';\nimport FeedService from './FeedService';\nimport _ from 'lodash';\n\nfunction Feeds({ updateMessages }) {\n  const [feeds, setFeeds] = React.useState([]);\n\n  const errorMessage = React.useCallback((err) => {\n    updateMessages({danger: 'There was an error.'});\n    console.log(err);\n  }, [updateMessages]);\n\n  const successMessage = (response) => {\n    updateMessages({success: \"Saved changes to '\" + response.data.name + \"'.\"});\n  };\n\n  const updateFeed = (i, event) => {\n    let updatedFeeds = [...feeds];\n\n    updatedFeeds[i].display = event.target.checked;\n\n    FeedService.put(updatedFeeds[i]).then(successMessage).catch(errorMessage);\n\n    setFeeds(updatedFeeds);\n  };\n\n  React.useEffect(() => {\n    FeedService.get().then((response) => { setFeeds(response.data); }).catch(errorMessage);\n  }, [errorMessage]);\n\n  const toggleTd = (feed, i) => {\n    return (\n        <Form.Switch\n          key={feed.id}\n          onChange={(event) => { updateFeed(i, event); } }\n          id={'enable-switch-' + feed.id}\n          label={feed.id}\n          aria-label={'Enable ' + feed.name}\n          checked={feed.display}\n        />\n    );\n  };\n\n  const feedRows = () => {\n    return feeds.map((feed, i) => {\n      let attr = _.pick(feed, ['id', 'name', 'url']);\n      let tds  = _.map(attr, (v, k) => { return (<td key={k}>{v}</td>); });\n\n      return (\n        <tr key={i}>\n          {tds}\n          <td>{toggleTd(feed, i)}</td>\n        </tr>\n      );\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <Table striped responsive size=\"sm\">\n        <thead>\n          <tr>\n            <th>id</th>\n            <th>name</th>\n            <th>url</th>\n            <th>active?</th>\n          </tr>\n        </thead>\n        <tbody>\n          {feedRows()}\n        </tbody>\n      </Table>\n    </React.Fragment>\n  );\n}\n\nexport default Feeds;\n","import axios from 'axios';\n\nconst baseUrl = '/entries';\n\nclass EntryService {\n  static getPods() {\n    return axios.get([baseUrl, 'pods.json'].join('/'));\n  };\n\n  static get() {\n    return axios.get(baseUrl + '.json');\n  }\n\n  static delete(entry) {\n    return axios.delete([baseUrl, entry.id + '.json'].join('/'));\n  }\n};\n\nexport default EntryService;\n","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { BsX } from 'react-icons/bs';\nimport { FaAsterisk } from 'react-icons/fa';\nimport EntryService from './EntryService';\nimport _ from 'lodash';\n\nconst getUniqueRgbHtmlColor = (index) => {\n  const colorList = [\n    [240,163,255],\n    [0,117,220],\n    [153,63,0],\n    [76,0,92],\n    [25,25,25],\n    [0,92,49],\n    [43,206,72],\n    [255,204,153],\n    [128,128,128],\n    [148,255,181],\n    [143,124,0],\n    [157,204,0],\n    [194,0,136],\n    [0,51,128],\n    [255,164,5],\n    [255,168,187],\n    [66,102,0],\n    [255,0,16],\n    [94,241,242],\n    [0,153,143],\n    [224,255,102],\n    [116,10,255],\n    [153,0,0],\n    [255,255,128],\n    [255,255,0],\n    [255,80,5]\n  ];\n\n  return 'rgb(' + colorList[index % colorList.length].join() + ')';\n}\n\nconst allRowClassNames  = ['border-top', 'entry'];\nconst progressClassName = 'mikefeed-ui-progressbar-overlay';\nconst readClassName     = ['read'];\n\nfunction Entry({ updateMessages, entry, isLast }) {\n  const asteriskStyle = { color: getUniqueRgbHtmlColor(entry.feed_id) };\n  const [rowClassNames, setRowClassNames]   = React.useState(allRowClassNames);\n\n  const errorMessage = React.useCallback((err) => {\n    setRowClassNames(prevState => { return _.without(prevState, progressClassName) });\n    updateMessages({danger: 'There was an error.'});\n    console.log(err);\n  }, [updateMessages]);\n\n  const successMessage = () => {\n    setRowClassNames(prevState => { return [readClassName, ..._.without(prevState, progressClassName)] });\n  };\n\n  const goToUrl = () => {\n    window.open(entry.link, '_blank');\n\n    markEntryRead();\n  };\n\n  const markEntryRead = () => {\n    setRowClassNames(prevState => { return [progressClassName, ...prevState]; });\n    EntryService.delete(entry).then(successMessage).catch(errorMessage);\n  };\n\n  React.useEffect(() => {\n    if (true === isLast) {\n      setRowClassNames(prevState => { return ['border-bottom', ...prevState]; });\n    }\n  }, [isLast]);\n\n  return (\n    <Row key={entry.id} className={rowClassNames}>\n      <Col variant={'light'} xs={'auto'} as={Button}>\n        <BsX />\n      </Col>\n      <Col xs={'auto'} className={'align-self-center'} onClick={goToUrl}>\n        <FaAsterisk style={asteriskStyle} />\n      </Col>\n      <Col className={'text-truncate align-self-center'} onClick={goToUrl}>\n        <a className={'text-decoration-none'} style={{corationLine: 'none', color: 'black'}} rel=\"noopener noreferrer\" target=\"_blank\" href={entry.link}>{entry.subject}</a>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Entry;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Entry from './Entry';\nimport EntryService from './EntryService';\n\nfunction Entries({ updateMessages }) {\n  const [entries, setEntries] = React.useState([]);\n\n  const errorMessage = React.useCallback((err) => {\n    updateMessages({danger: 'There was an error.'});\n    console.log(err);\n  }, [updateMessages]);\n\n  React.useEffect(() => {\n    EntryService.get().then((response) => { setEntries(response.data); }).catch(errorMessage);\n  }, [errorMessage]);\n\n  const entryRows = () => {\n    return entries.map((entry, i) => {\n      return (<Entry updateMessages={updateMessages} key={entry.id} isLast={(entries.length - 1) === i} entry={entry} />);\n    });\n  };\n\n  return (\n    <Container fluid>\n      {entryRows()}\n    </Container>\n  );\n}\n\nexport default Entries;\n","import React from 'react';\nimport Navigation from './Navigation';\nimport Feeds from './Feeds';\nimport Entries from './Entries';\nimport Alert from 'react-bootstrap/Alert';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport _ from 'lodash';\nimport './App.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  const [messages, setMessages] = React.useState({});\n\n  const updateMessages = (messages) => {\n    setMessages(messages);\n  };\n\n  const alertsFragment = () => {\n    if (_.isEmpty(messages)) {\n      return (<Alert style={{minHeight: '50px'}}>{' '}</Alert>);\n    } else {\n      return _.map(messages, (v, k) => {\n        return (\n          <Alert key={k} variant={k} dismissible onClose={ () => { setMessages(); } }>{v}</Alert>\n        );\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Router>\n        <Navigation />\n        {alertsFragment()}\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/entries\" />\n          </Route>\n          <Route path='/feeds'>\n            <Feeds updateMessages={updateMessages}/>\n          </Route>\n          <Route path='/entries'>\n            <Entries updateMessages={updateMessages}/>\n          </Route>\n        </Switch>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}